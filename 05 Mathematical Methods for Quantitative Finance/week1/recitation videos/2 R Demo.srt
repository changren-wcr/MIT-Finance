0
00:00:00,000 --> 00:00:01,528


1
00:00:01,528 --> 00:00:03,070
PROFESSOR: Let's take a look together

2
00:00:03,070 --> 00:00:05,350
at the code for simulating the scaling

3
00:00:05,350 --> 00:00:09,400
of the binomial distribution in R. You can install RStudio.

4
00:00:09,400 --> 00:00:14,090
It's freely available for PCs, for Macs, for Linux.

5
00:00:14,090 --> 00:00:16,452
And when you install it and you open it up,

6
00:00:16,452 --> 00:00:17,910
you should see something like this.

7
00:00:17,910 --> 00:00:19,210
So there are four panes.

8
00:00:19,210 --> 00:00:21,280
On the left-hand side, on the lower left

9
00:00:21,280 --> 00:00:25,150
is the console area, which is where we'll type commands

10
00:00:25,150 --> 00:00:26,530
interactively.

11
00:00:26,530 --> 00:00:30,400
On the upper part is where you'll see source files.

12
00:00:30,400 --> 00:00:32,830
And this is the code that is in the slides

13
00:00:32,830 --> 00:00:34,660
as during recitation.

14
00:00:34,660 --> 00:00:37,030
On the lower right is where plots will show up,

15
00:00:37,030 --> 00:00:40,150
where help information is given, where you can see list

16
00:00:40,150 --> 00:00:42,280
of installed packages that are part

17
00:00:42,280 --> 00:00:44,470
of your particular installation.

18
00:00:44,470 --> 00:00:48,160
And on the upper right is where you can see the variables

19
00:00:48,160 --> 00:00:49,490
you've created.

20
00:00:49,490 --> 00:00:51,880
So let's take a look through the code one step at a time,

21
00:00:51,880 --> 00:00:53,050
run it together.

22
00:00:53,050 --> 00:00:55,480
You should do this along with me, or after watching

23
00:00:55,480 --> 00:00:56,710
this short video.

24
00:00:56,710 --> 00:00:58,450
And go in and tweak the code.

25
00:00:58,450 --> 00:00:59,410
Tweak the parameters.

26
00:00:59,410 --> 00:01:00,490
Run it yourself.

27
00:01:00,490 --> 00:01:02,720
You should get your hands on with the code.

28
00:01:02,720 --> 00:01:04,010
Try it out.

29
00:01:04,010 --> 00:01:07,180
There's nothing special about R, necessarily.

30
00:01:07,180 --> 00:01:08,890
But it's a great language to learn.

31
00:01:08,890 --> 00:01:10,210
It's very practical.

32
00:01:10,210 --> 00:01:12,970
If you don't know it, now is a great chance to learn.

33
00:01:12,970 --> 00:01:15,280
And in the finance industry, you will

34
00:01:15,280 --> 00:01:19,360
find that while people may have all kinds of different opinions

35
00:01:19,360 --> 00:01:23,440
about what the pros and cons are of different computational

36
00:01:23,440 --> 00:01:26,770
environments, usually on the job, you don't get to choose--

37
00:01:26,770 --> 00:01:28,637
or even if you're in charge, you'll

38
00:01:28,637 --> 00:01:30,970
eventually have to interface with the counterparty who's

39
00:01:30,970 --> 00:01:32,178
going to have another choice.

40
00:01:32,178 --> 00:01:36,100
So it's always good to know new languages,

41
00:01:36,100 --> 00:01:38,440
to keep the ideas separate from the particular code

42
00:01:38,440 --> 00:01:41,380
implementations, and ready to pick things up and try them

43
00:01:41,380 --> 00:01:43,840
out, particularly when you've got a problem

44
00:01:43,840 --> 00:01:45,230
to try as, you do here.

45
00:01:45,230 --> 00:01:46,960
So let's do this together.

46
00:01:46,960 --> 00:01:49,010
Anyway, so let's go through a demonstration.

47
00:01:49,010 --> 00:01:51,580
So the first thing, which is a bit R-specific,

48
00:01:51,580 --> 00:01:55,330
is I'm going to define a list of values that I want to try.

49
00:01:55,330 --> 00:01:58,300
So nlist is going to be the name of my variable.

50
00:01:58,300 --> 00:02:02,563
The left assignment arrow, the less than dash,

51
00:02:02,563 --> 00:02:03,730
you can use in the equation.

52
00:02:03,730 --> 00:02:04,450
That works fine.

53
00:02:04,450 --> 00:02:07,030
That's a symbolic thing, and it's conventional in R.

54
00:02:07,030 --> 00:02:11,350
And then the c operator concatenates the list operator.

55
00:02:11,350 --> 00:02:12,170
It creates them.

56
00:02:12,170 --> 00:02:15,250
So my list consists, instead of going every step, one, two,

57
00:02:15,250 --> 00:02:16,840
three, four, five, up through 1,000.

58
00:02:16,840 --> 00:02:19,240
I just picked some convenient samples.

59
00:02:19,240 --> 00:02:22,000
In RStudio, I can take this--

60
00:02:22,000 --> 00:02:24,070
I certainly could take this line,

61
00:02:24,070 --> 00:02:29,140
and I can type it in the lower part and run it.

62
00:02:29,140 --> 00:02:33,320
And if I type n list, I'll get my values out.

63
00:02:33,320 --> 00:02:36,340
And you notice that in my list of my environment variables,

64
00:02:36,340 --> 00:02:38,590
it showed up here in the upper right.

65
00:02:38,590 --> 00:02:40,900
However, if we're working with code,

66
00:02:40,900 --> 00:02:44,090
and you've got more than just a couple of lines interactively,

67
00:02:44,090 --> 00:02:47,890
you may find it helpful as I do to open a new window for an R

68
00:02:47,890 --> 00:02:49,630
script as a scratchpad.

69
00:02:49,630 --> 00:02:53,583
Or in more structured examples, in R notebook.

70
00:02:53,583 --> 00:02:55,000
Keep them up here, and then if you

71
00:02:55,000 --> 00:02:57,610
want to run something that's highlighted up here,

72
00:02:57,610 --> 00:03:00,250
you can highlight one or more lines of code.

73
00:03:00,250 --> 00:03:03,320
Click on run, and it will run your selection.

74
00:03:03,320 --> 00:03:06,400
So let's take a look for those values of n,

75
00:03:06,400 --> 00:03:10,520
I'm going to define my probability to be 10%.

76
00:03:10,520 --> 00:03:12,470
And we can change that in a moment.

77
00:03:12,470 --> 00:03:14,560
And then I've got a for loop.

78
00:03:14,560 --> 00:03:16,930
So the for loop is going to take n

79
00:03:16,930 --> 00:03:19,510
to run through all the values in the list.

80
00:03:19,510 --> 00:03:24,010
And then the contents of the for loop are enclosed in brackets.

81
00:03:24,010 --> 00:03:26,320
So white space is not important.

82
00:03:26,320 --> 00:03:28,750
Unlike Python, indentation is just

83
00:03:28,750 --> 00:03:30,460
for the convenience of user.

84
00:03:30,460 --> 00:03:32,290
It's not read by the language.

85
00:03:32,290 --> 00:03:34,420
So everything between those two brackets

86
00:03:34,420 --> 00:03:36,940
is repeated within the for loop.

87
00:03:36,940 --> 00:03:40,420
I'm going to go let k go from 0 to n

88
00:03:40,420 --> 00:03:42,470
is going to be a list of all the integers.

89
00:03:42,470 --> 00:03:44,137
If you want to see what that looks like,

90
00:03:44,137 --> 00:03:47,670
if you just type 0 to--

91
00:03:47,670 --> 00:03:54,580
oops, 0 to 5, it will give you the value 0 to 5.

92
00:03:54,580 --> 00:03:55,690
Or 0 to 12.

93
00:03:55,690 --> 00:03:57,050
It will give you 0 to 12.

94
00:03:57,050 --> 00:03:59,990
So what we're doing is for each value of n--

95
00:03:59,990 --> 00:04:04,660
so for n trials, we're going to let k go from 0 successes up

96
00:04:04,660 --> 00:04:06,280
through all of them being successes.

97
00:04:06,280 --> 00:04:07,960
You could think of the number of heads

98
00:04:07,960 --> 00:04:10,300
in n flips of a biased coin.

99
00:04:10,300 --> 00:04:13,930
And then we're going to compute the probability for each one

100
00:04:13,930 --> 00:04:15,390
from the binomial distribution.

101
00:04:15,390 --> 00:04:17,410
Now this is a built-in function in R.

102
00:04:17,410 --> 00:04:20,589
And if you want to take a look at what it is for any function,

103
00:04:20,589 --> 00:04:26,350
you can type question mark dbinom to get the description.

104
00:04:26,350 --> 00:04:28,810
Or over here in the help panel, you

105
00:04:28,810 --> 00:04:30,380
can just type in what you want.

106
00:04:30,380 --> 00:04:34,570
So if you want to see for any other distribution,

107
00:04:34,570 --> 00:04:37,910
for the data distribution or so on, you can get its details.

108
00:04:37,910 --> 00:04:39,610
So this is all the details you need

109
00:04:39,610 --> 00:04:44,080
for the binomial distribution along with some examples

110
00:04:44,080 --> 00:04:45,590
and some references.

111
00:04:45,590 --> 00:04:47,740
So we're going to use binomial distribution.

112
00:04:47,740 --> 00:04:50,050
The conventions are the same ones that we use.

113
00:04:50,050 --> 00:04:52,240
F will be our distribution function.

114
00:04:52,240 --> 00:04:54,070
K is the number of successes.

115
00:04:54,070 --> 00:04:56,020
N is the total number of trials.

116
00:04:56,020 --> 00:04:58,600
P is the probability of success.

117
00:04:58,600 --> 00:05:01,220
Then having done that, we just need to draw some pictures.

118
00:05:01,220 --> 00:05:03,670
So we'll use the bar plot command,

119
00:05:03,670 --> 00:05:07,450
and you can read about that here.

120
00:05:07,450 --> 00:05:11,670
I'm going to use, for now, the basic base package r commands.

121
00:05:11,670 --> 00:05:14,790
There's other popular packages, like ggplot,

122
00:05:14,790 --> 00:05:20,340
which have much more sophisticated and interesting

123
00:05:20,340 --> 00:05:21,510
aesthetic options.

124
00:05:21,510 --> 00:05:24,120
But we'll just get our base results for right now.

125
00:05:24,120 --> 00:05:29,220
So the barplot is going to plot the values of f.

126
00:05:29,220 --> 00:05:33,090
It's going to plot the names label--

127
00:05:33,090 --> 00:05:36,450
is going to give the labels that correspond to each bar.

128
00:05:36,450 --> 00:05:39,030
And then xlab and ylab are the labels

129
00:05:39,030 --> 00:05:42,090
on the plot for the x-axis and the y-axis labels.

130
00:05:42,090 --> 00:05:44,880
Main is the title of the graph.

131
00:05:44,880 --> 00:05:47,010
And this paste command concatenates

132
00:05:47,010 --> 00:05:50,520
a bunch of string variables and numbers

133
00:05:50,520 --> 00:05:54,360
together, so that we can get numerical values on our plot.

134
00:05:54,360 --> 00:05:57,480
And then readline() is just a pause command.

135
00:05:57,480 --> 00:05:59,760
It waits for input at the keyboard,

136
00:05:59,760 --> 00:06:03,150
so that we can build the graph successively, as I showed you.

137
00:06:03,150 --> 00:06:04,890
So let's take this whole thing.

138
00:06:04,890 --> 00:06:06,910
I'm going to select all of this text.

139
00:06:06,910 --> 00:06:08,370
I can include the comment.

140
00:06:08,370 --> 00:06:11,220
And I'm going to hit Run.

141
00:06:11,220 --> 00:06:13,170
And now, down at the bottom, it's

142
00:06:13,170 --> 00:06:14,550
waiting for me to hit a key.

143
00:06:14,550 --> 00:06:17,910
So if I want to expand this graph so it fills up

144
00:06:17,910 --> 00:06:21,720
the whole thing, these little icons over here will expand it.

145
00:06:21,720 --> 00:06:25,410
If I want to see both of those at the same time, I can do it.

146
00:06:25,410 --> 00:06:28,120
And I can resize the window between them.

147
00:06:28,120 --> 00:06:30,640
For right now, let's make this big.

148
00:06:30,640 --> 00:06:33,700
Let me resize this to give us a little more room.

149
00:06:33,700 --> 00:06:35,760
So what we can see here is two plots.

150
00:06:35,760 --> 00:06:37,530
I've done one trial.

151
00:06:37,530 --> 00:06:39,930
There's 10% probability of success.

152
00:06:39,930 --> 00:06:43,590
Therefore, the chance of zero successes is 90%.

153
00:06:43,590 --> 00:06:45,960
The chance of one success is 10%.

154
00:06:45,960 --> 00:06:47,460
No surprise there.

155
00:06:47,460 --> 00:06:50,370
Now I'm going to click, put focus in the lower right,

156
00:06:50,370 --> 00:06:51,840
and hit return.

157
00:06:51,840 --> 00:06:53,410
And it draws the next.

158
00:06:53,410 --> 00:06:55,530
So this is incremented by 1.

159
00:06:55,530 --> 00:06:57,450
So now we're looking at n equals 2.

160
00:06:57,450 --> 00:06:58,620
There are two trials.

161
00:06:58,620 --> 00:07:01,050
I could have zero, one, or two successes.

162
00:07:01,050 --> 00:07:08,520
The probabilities are 81%, 0.9 squared, down to 1%

163
00:07:08,520 --> 00:07:11,040
for the chance of getting two successes.

164
00:07:11,040 --> 00:07:13,770
If we keep going, these are the different values.

165
00:07:13,770 --> 00:07:16,740
And as I hit return each time, you

166
00:07:16,740 --> 00:07:20,820
see the graph drawn in the way that we did in class.

167
00:07:20,820 --> 00:07:23,350
OK, so I can go all the way to the end.

168
00:07:23,350 --> 00:07:25,140
Now if you want, you can go in, and you

169
00:07:25,140 --> 00:07:26,560
can pick a different number.

170
00:07:26,560 --> 00:07:31,160
You could pick that this could be, let's say 30%.

171
00:07:31,160 --> 00:07:34,400
And rerun the whole thing to your heart's content.

172
00:07:34,400 --> 00:07:37,550


173
00:07:37,550 --> 00:07:42,810
And if we rerun this now, we have-- that's for one,

174
00:07:42,810 --> 00:07:49,620
two, five, 10, 20, 50, 100.

175
00:07:49,620 --> 00:07:51,990
And you see the features we saw in class, which are,

176
00:07:51,990 --> 00:07:54,720
we started with an asymmetric distribution.

177
00:07:54,720 --> 00:07:57,240
And we're getting something which is actually fairly

178
00:07:57,240 --> 00:07:58,890
symmetric about the mean.

179
00:07:58,890 --> 00:08:02,310
It's also looking pretty Gaussian, isn't it?

180
00:08:02,310 --> 00:08:05,340
We'll see in a moment how we can rescale the variables to get

181
00:08:05,340 --> 00:08:08,190
the true universality behavior that we expect

182
00:08:08,190 --> 00:08:10,820
from the central limit theorem.

183
00:08:10,820 --> 00:08:14,030
Keep in mind that whenever we're running a numerical simulation

184
00:08:14,030 --> 00:08:18,530
now, whenever we think about either using a random number

185
00:08:18,530 --> 00:08:20,630
generator to get Gaussian variables or looking

186
00:08:20,630 --> 00:08:23,750
at the relationship between binomial,

187
00:08:23,750 --> 00:08:26,930
binomial tree models and Gaussian distributions,

188
00:08:26,930 --> 00:08:29,960
the binomial distribution with a finite number of steps cannot

189
00:08:29,960 --> 00:08:32,090
go from minus infinity to infinity.

190
00:08:32,090 --> 00:08:33,860
Can't go negative at all.

191
00:08:33,860 --> 00:08:37,400
And in this case, the maximum value that we could have

192
00:08:37,400 --> 00:08:38,450
would be 100.

193
00:08:38,450 --> 00:08:40,909
Given that the probability of being in the tails

194
00:08:40,909 --> 00:08:43,909
becomes very, very small very quickly,

195
00:08:43,909 --> 00:08:45,950
we wouldn't see that on the graph.

196
00:08:45,950 --> 00:08:49,580
But remember, in finance we often care about rare events.

197
00:08:49,580 --> 00:08:51,740
And getting the probability of rare events

198
00:08:51,740 --> 00:08:55,370
wrong on a picture like this might not seem that big a deal.

199
00:08:55,370 --> 00:08:57,200
It's a rounding error in the number

200
00:08:57,200 --> 00:08:58,700
of pixels in the corners.

201
00:08:58,700 --> 00:09:01,580
But in finance, the consequences are often

202
00:09:01,580 --> 00:09:03,960
proportional to the distance away from the mean.

203
00:09:03,960 --> 00:09:06,080
So we frequently run into situations

204
00:09:06,080 --> 00:09:08,300
where we have events of interest that

205
00:09:08,300 --> 00:09:12,020
have very low probability but very high consequence.

206
00:09:12,020 --> 00:09:13,730
Multiplying the two together gives us

207
00:09:13,730 --> 00:09:15,540
an economically significant number.

208
00:09:15,540 --> 00:09:20,850
So we can't just look crudely at pictures on a graph like this.

209
00:09:20,850 --> 00:09:25,370
OK, so if we keep going, that's 1,000.

210
00:09:25,370 --> 00:09:28,260
Now let's take a look at our scaling variable.

211
00:09:28,260 --> 00:09:30,470
Remember what the basic idea was?

212
00:09:30,470 --> 00:09:33,680
We want to have the scaling variable, under which

213
00:09:33,680 --> 00:09:35,420
the distribution looks stable.

214
00:09:35,420 --> 00:09:37,862
It doesn't keep shifting around and moving to the side.

215
00:09:37,862 --> 00:09:39,320
And there's one thing that we might

216
00:09:39,320 --> 00:09:42,560
want to keep in mind, which is that we always

217
00:09:42,560 --> 00:09:47,600
have, for any random variable x, that where its moments exist,

218
00:09:47,600 --> 00:09:53,540
if we have x, and we can compute its expectation--

219
00:09:53,540 --> 00:09:55,520
let's give that a name.

220
00:09:55,520 --> 00:09:59,150
Call it mu, or x bar.

221
00:09:59,150 --> 00:10:01,880
And we can compute its variance, and let's assume

222
00:10:01,880 --> 00:10:03,560
that that exists also.

223
00:10:03,560 --> 00:10:05,460
And let's give it a name.

224
00:10:05,460 --> 00:10:07,910
Let's call it sigma squared.

225
00:10:07,910 --> 00:10:10,310
That if these are-- if mu and sigma are

226
00:10:10,310 --> 00:10:12,570
any numbers for our distribution,

227
00:10:12,570 --> 00:10:15,320
we know that for our binomial distribution,

228
00:10:15,320 --> 00:10:17,180
the mean is n times p.

229
00:10:17,180 --> 00:10:20,150
We know that the variance is n times p times q.

230
00:10:20,150 --> 00:10:22,250
But for any values of mu and sigma,

231
00:10:22,250 --> 00:10:25,520
we can take any variable x where mu and sigma exist,

232
00:10:25,520 --> 00:10:28,040
and define standardized variable.

233
00:10:28,040 --> 00:10:30,560
And we do it in a very trivial construction.

234
00:10:30,560 --> 00:10:41,930
Let's call it define z to be x minus the mean of x.

235
00:10:41,930 --> 00:10:43,010
Guess what?

236
00:10:43,010 --> 00:10:46,370
The mean of that variable by construction is 0.

237
00:10:46,370 --> 00:10:47,450
What about its variance?

238
00:10:47,450 --> 00:10:50,310
Well, its variance is going to be sigma squared.

239
00:10:50,310 --> 00:10:56,200
So let's just divide this by sigma.

240
00:10:56,200 --> 00:11:00,540
And if this is a definition, this variable z

241
00:11:00,540 --> 00:11:06,710
is always going to have 0 mean and unit variance.

242
00:11:06,710 --> 00:11:11,350
So let's go back to our example.

243
00:11:11,350 --> 00:11:15,100
And now let's look at our code for rescaling the sequence.

244
00:11:15,100 --> 00:11:20,230
In here, we're going to look at the same set of values.

245
00:11:20,230 --> 00:11:24,100
But now what we're going to do is, after we define k,

246
00:11:24,100 --> 00:11:28,480
we're going to define z to be a rescaled variable.

247
00:11:28,480 --> 00:11:30,280
That is we're going to take k, we're

248
00:11:30,280 --> 00:11:32,110
going to subtract its mean, and we're

249
00:11:32,110 --> 00:11:34,580
going to divide by the square root of the variance.

250
00:11:34,580 --> 00:11:37,390
And then we're going to plot the results.

251
00:11:37,390 --> 00:11:38,170
OK.

252
00:11:38,170 --> 00:11:39,490
I'm going to cut off--

253
00:11:39,490 --> 00:11:47,120


254
00:11:47,120 --> 00:11:50,960
so we're going to cut off our graph

255
00:11:50,960 --> 00:11:55,010
at values of plus or minus 5, just so that we can see

256
00:11:55,010 --> 00:11:57,110
everything that we're doing.

257
00:11:57,110 --> 00:12:01,130
And now, if we take our list, let's run this again.

258
00:12:01,130 --> 00:12:01,990
Same commands.

259
00:12:01,990 --> 00:12:05,090
So this time z is going to be our scaled variable.

260
00:12:05,090 --> 00:12:08,000
F is going to be the binomial distribution,

261
00:12:08,000 --> 00:12:09,660
and let's take a look at the plot.

262
00:12:09,660 --> 00:12:12,000
So I've highlighted the text here.

263
00:12:12,000 --> 00:12:15,624
I'm going to hit run.

264
00:12:15,624 --> 00:12:19,230
Oops, let's make sure that we get that right.

265
00:12:19,230 --> 00:12:21,510
We need to highlight the entire thing, including

266
00:12:21,510 --> 00:12:24,220
the top definitions of those variables.

267
00:12:24,220 --> 00:12:25,680
So let's do that, and hit run.

268
00:12:25,680 --> 00:12:28,270
And you could run these one at a time or type them in.

269
00:12:28,270 --> 00:12:31,030
So here is, in terms of our scaling variable.

270
00:12:31,030 --> 00:12:32,760
So here we've got for n equals 1,

271
00:12:32,760 --> 00:12:35,310
and I've set p back to point 1.

272
00:12:35,310 --> 00:12:42,730
And now for n equals 2, n equals 5, n equals 10, n equals 20.

273
00:12:42,730 --> 00:12:46,080
And now you can see that within the same picture,

274
00:12:46,080 --> 00:12:48,720
our graph is staying centered.

275
00:12:48,720 --> 00:12:51,240
And as I get to larger and larger values,

276
00:12:51,240 --> 00:12:55,410
we see that we've reached the central value

277
00:12:55,410 --> 00:12:58,110
to be in the middle of the graph to be our rescaled variable

278
00:12:58,110 --> 00:13:00,630
equal to--

279
00:13:00,630 --> 00:13:03,150
centered around 0, around the mean value in terms

280
00:13:03,150 --> 00:13:04,470
of our rescale variable.

281
00:13:04,470 --> 00:13:06,990
And our shape is looking quite Gaussian.

282
00:13:06,990 --> 00:13:10,610


283
00:13:10,610 --> 00:13:11,930
Try it out yourself.

284
00:13:11,930 --> 00:13:13,130
Change the numbers.

285
00:13:13,130 --> 00:13:15,490
And play with the code.

